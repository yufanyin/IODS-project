geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight - standardized Weight values") +
ggtitle("RATS: standardized Weight values") +
theme(panel.grid.major.y = element_line(colour = "grey40"))
rats_l <- rats_l %>%
mutate(Time1 = factor(rats_l$Time)) %>%
ungroup()
str(rats_l)
ggplot(data = rats_l, aes(x = rats_l$Time1, y = Weight, fill = rats_l$Group)) +
geom_boxplot() +
ylab("Weight") +
xlab("Measurement time [days]") +
ggtitle("Rat weights") +
scale_fill_discrete(name = "Diet group") +
theme(legend.position = "right")
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
rats_l
str(rats_l)
rats_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt") %>% str()
write.csv(BPRS_l,
file = "G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.csv")
read.csv(file =
"G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.csv")
str(bprs_l)
str(BPRS)
rats_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt")
str(rats_l)
rats_l <- read.csv("G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.csv")%>% head()
bprs_l <- read.csv("G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.csv")%>% head()
str(bprs_l)
bprs_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.txt")
rats_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt")
str(bprs_l)
# Chapter 6: Analysis of longitudinal data
# yufanyin
# 9.12.2019
# Note: '[Step N]' is used for reviewers to check my work queicky.
# reference to the data source:
# https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt
# https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt
# 6.1 Data wrangling
# 6.1.1 Read the data
# Load the data sets
# [Step 1a]
BPRS <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/BPRS.txt", sep = " ", header = TRUE)
rats <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/rats.txt", header = TRUE)
# check the data frame
# [Step 1b]
dim(BPRS)
head(BPRS)
str(BPRS)
# The ‘BPRS’ data consist of 40 observations in 11 variables.
dim(rats)
head(rats)
str(rats)
# The ‘rats’ data consist of 16 observations in 13 variables.
# 6.1.2 Convert the categorical variables to factors
# [Step 2]
# Load necessary packages
library(tidyr)
library(dplyr)
BPRS$treatment <- factor(BPRS$treatment)
BPRS$subject <- factor(BPRS$subject)
str(BPRS)
rats$ID <- factor(rats$ID)
rats$Group <- factor(rats$Group)
str(rats)
# 6.1.3 Convert the data sets to long form
# [Step 3]
# Add a week variable to BPRS
BPRS_l <-  BPRS %>% gather(key = weeks, value = BPRS, -treatment, -subject)
glimpse(BPRS_l)
BPRS_l <- BPRS_l %>% mutate(week = as.integer(substr(weeks,5,5)))
glimpse(BPRS_l)
# Add a Time variable to rats
rats_l <- rats %>% gather(key = WD, value = Weight, -ID, -Group)
glimpse(rats_l)
rats_l <- rats_l %>% mutate(Time = as.integer(substr(WD,3,4)))
glimpse(rats_l)
# 6.1.4 Compare the new data sets with their wide form versions
# [Step 4]
View(BPRS_l)
str(BPRS_l)
# The long form 'BPRS_l' can be analysed in a better way.
# The former wide form used the week number as a variable. Now all values of the data were transformed to the long form. Hence each BPRS value could be comparable with treatment, subject and week number.
# All shorter columns were put after each other relating to the week number, in the time order.
View(rats_l)
str(rats_l)
# Similarly, the weights and times were in separate variables, after each other in a time series.
# 6.1.5  Save the new data frame
write.table(BPRS_l,
file = "G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.txt",
col.names = TRUE, row.names = TRUE)
read.table(file =
"G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.txt") %>% str()
# The data consist of 360 observations in 5 variables.
# "treatment", "subject", "weeks", "BPRS", "week"
write.table(rats_l,
file = "G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt",
col.names = TRUE, row.names = TRUE)
read.table(file =
"G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt") %>% str()
# The data consist of 155 observations in 8 variables.
# "ID", "Group", "WD", "Weight", "Time"
library(tidyr)
library(dplyr)
library(corrplot)
library(ggplot2)
library(GGally)
library(knitr)
library(kableExtra)
library(ggthemes)
library(stringr)
library(lme4)
bprs <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/BPRS.txt", sep = " ", header = TRUE)
rats <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/rats.txt", header = TRUE)
bprs_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/BPRS_l.txt")
rats_l <- read.table("G:/C-Open Data Science/0-191030/IODS-project-master/rats_l.txt")
str(bprs_l)
str(rats_l)
str(bprs_l)
knitr::kable(bprs_l, caption = "The long BPRS data 'bprs_l'") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center") %>%
scroll_box(height = "200px")
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
rats_l <- rats_l %>%
group_by(Time) %>%
mutate(StdWeight = ((Weight - mean(Weight))/sd(Weight))) %>%
ungroup()
head(rats_l)
bprs_l$treatment <- factor(bprs_l$treatment)
bprs_l$subject <- factor(bprs_l$subject)
rats_l$ID <- factor(rats_l$ID)
rats_l$Group <- factor(rats_l$Group)
str(bprs_l)
str(rats_l)
knitr::kable(bprs_l, caption = "The long BPRS data 'bprs_l'") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center") %>%
scroll_box(height = "200px")
# rats_ data set
knitr::kable(rats_l, caption = "The long RATS data 'rats_l'") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center") %>%
scroll_box(height = "200px")
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
rats_l <- rats_l %>%
group_by(Time) %>%
mutate(StdWeight = ((Weight - mean(Weight))/sd(Weight))) %>%
ungroup()
head(rats_l)
rats_l <- rats_l %>%
mutate(Time1 = factor(rats_l$Time)) %>%
ungroup()
str(rats_l)
rats_l <- rats_l %>%
group_by(Time) %>%
mutate(StdWeight = ((Weight - mean(Weight))/sd(Weight))) %>%
ungroup()
head(rats_l)
str(rats_l)
ggplot(data = rats_l, aes(x = rats_l$Time1, y = Weight, fill = rats_l$Group)) +
geom_boxplot() +
ylab("Weight") +
xlab("Measurement time [days]") +
ggtitle("Rat weights") +
scale_fill_discrete(name = "Diet group") +
theme(legend.position = "right")
n_rats <- rats_l$Time %>% unique() %>% length()
rats_s <- rats_l %>%
group_by(Group, Time) %>%
summarise(mean = mean(Weight), se = (sd(Weight)/sqrt(n_rats))) %>%
ungroup()
str(rats_s)
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
ggplot(rats_s, aes(x = Time, y = mean, linetype = Group,  color = Group, shape = Group)) +
geom_line(size = 0.6) +
scale_linetype_manual(name = "Diet group", values = c(1,2,3)) +
geom_point(size=1.5) +
scale_shape_manual(name = "Diet group", values = c(16,17,18)) +
scale_color_manual(name = "Diet group", values = c("darkblue", "darkred", "darkgreen")) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.8) +
theme(legend.position = "right") +
scale_y_continuous(name = "Mean (Weight) +/- SE (Weight)") +
ggtitle("Mean weight profiles of different diet groups")
ggplot(rats_s, aes(x = Time, y = mean, linetype = Group,  color = Group, shape = Group)) +
geom_line(size = 0.6) +
scale_linetype_manual(name = "Diet group", values = c(1,2,3)) +
geom_point(size=1.5) +
scale_shape_manual(name = "Diet group", values = c(16,17,18)) +
scale_color_manual(name = "Diet group", values = c("blue", "red", "green")) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.8) +
theme(legend.position = "right") +
scale_y_continuous(name = "Mean (Weight) +/- SE (Weight)") +
ggtitle("Mean weight profiles of different diet groups")
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
ggplot(rats_l, aes(x = Time, y = StdWeight, linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight: standardized Weight values") +
ggtitle("RATS: standardized Weight values") +
theme(panel.grid.major.y = element_line(colour = "grey40"))
ggplot(rats_l, aes(x = Time, y = StdWeight, linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight: standardized Weight values") +
ggtitle("RATS: standardized Weight values") +
theme(panel.grid.major.y = element_line(colour = "darkblue"))
ggplot(rats_l, aes(x = Time, y = StdWeight, linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight: standardized Weight values") +
ggtitle("Standardized 'rats_l' Weight values") +
theme(panel.grid.major.y = element_line(colour = "darkblue"))
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
ggplot(rats_l, aes(x = Time, y = Weight,linetype = ID)) +
geom_line(color = "darkblue") +
scale_linetype_manual(values = rep(1:6, times= 3)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "right") +
scale_y_continuous(limits = c(min(rats_l$Weight), max(rats_l$Weight))) +
ggtitle("The long RATS data 'rats_l'")
ggplot(rats_l, aes(x = Time, y = StdWeight, linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight: standardized Weight values") +
ggtitle("Standardized 'rats_l' Weight values") +
theme(panel.grid.major.y = element_line(colour = "darkblue"))
ggplot(rats_l, aes(x = Time, y = StdWeight, linetype = ID)) +
geom_line(color = "darkred") +
scale_linetype_manual(values = rep(1:6, times=3)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "StdWeight: standardized Weight values") +
ggtitle("Standardized 'rats_l' Weight values") +
theme(panel.grid.major.y = element_line(colour = "darkred"))
ggplot(data = rats_l, aes(x = rats_l$Time1, y = Weight, fill = rats_l$Group)) +
geom_boxplot() +
ylab("Weight") +
xlab("Measurement time [days]") +
ggtitle("Rat weights") +
scale_fill_discrete(name = "Diet group") +
theme(legend.position = "right")
ggplot(rats_s, aes(x = Time, y = mean, linetype = Group,  color = Group, shape = Group)) +
geom_line(size = 0.6) +
scale_linetype_manual(name = "Diet group", values = c(1,2,3)) +
geom_point(size=1.5) +
scale_shape_manual(name = "Diet group", values = c(16,17,18)) +
scale_color_manual(name = "Diet group", values = c("blue", "red", "green")) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.8) +
theme(legend.position = "right") +
scale_y_continuous(name = "Mean (Weight) +/- SE (Weight)") +
ggtitle("Mean weight profiles of different diet groups")
rats_l10s <- rats_l %>%
filter(Time > 1) %>%
group_by(Group, ID) %>%
summarise(mean=mean(Weight)) %>%
ungroup()
glimpse(rats_l10s)
str(rats_l10s)
glimpse(rats_l10s)
str(rats_l10s)
ggplot(rats_s, aes(x = Time, y = mean, linetype = Group,  color = Group, shape = Group)) +
geom_line(size = 0.6) +
scale_linetype_manual(name = "Diet group", values = c(1,2,3)) +
geom_point(size=1.5) +
scale_shape_manual(name = "Diet group", values = c(16,17,18)) +
scale_color_manual(name = "Diet group", values = c("darkblue", "darkred", "darkgreen")) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se, linetype="1"), width=0.8) +
theme(legend.position = "right") +
scale_y_continuous(name = "Mean (Weight) +/- SE (Weight)") +
ggtitle("Mean weight profiles of different diet groups")
rats_l10s <- rats_l %>%
filter(Time > 1) %>%
group_by(Group, ID) %>%
summarise(mean=mean(Weight)) %>%
ungroup()
str(rats_l10s)
ggplot(rats_l10s, aes(x = Group, y = mean, fill = Group)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape = 23, size = 3, fill = "black") +
scale_y_continuous(name = "Mean (Weight) / Time 8-64 [days]") +
xlab("Diet group") +
scale_fill_discrete(name = "Diet group") +
ggtitle("Mean weights of diet groups excluding the first measurement")
rats_l10s_o <- rats_l10s %>%
filter(
(mean > 250 & Group == 1) |
(mean < 550 & Group == 2) |
(mean > 500 & Group == 3))  %>%
ungroup()
str(rats_l10s1)
str(rats_l10s_o)
ggplot(rats_l10s_o, aes(x = Group, y = mean, fill = Group)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape = 23, size = 3, fill = "black") +
scale_y_continuous(name = "Mean (Weight) / Time 8-64 [days]") +
xlab("Diet group") +
scale_fill_discrete(name = "Diet group") +
ggtitle("Mean weights of diet groups without the outlier")
ggplot(rats_l10s, aes(x = Group, y = mean, fill = Group)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape = 23, size = 3, fill = "black") +
scale_y_continuous(name = "Mean (Weight) / Time 8-64 [days]") +
xlab("Diet group") +
scale_fill_discrete(name = "Diet group") +
ggtitle("Mean weights of diet groups excluding the first measurement")
t.test(mean ~ rats_l10s2$Group == 2, paired = TRUE)
rats_l10s_b <- rats_l10s %>%
mutate(baseline = rats$WD1)
rats_l10s_b %>% knitr::kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center") %>% scroll_box(height = "200px")
rats_lrm1 <- lm(mean ~ Group, data = rats_l10s_b)
round(rats_lrm1$coefficients, digits = 2) %>% knitr::kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
rats_anova1 <- anova(rats_lrm1)
rats_anova1
rats_anova2 <- aov(mean ~ Group, data = rats_l10s_b)
summary(rats_anova2)
TukeyHSD(rats_aov2, "Group", ordered = TRUE, conf.level = 0.95)
TukeyHSD(rats_anova2, "Group", ordered = TRUE, conf.level = 0.95)
rats_lrm2 <- lm(mean ~ baseline + Group, data = rats_l10s_b)
round(rats_lrm2$coefficients, digits = 2) %>% knitr::kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
rats_anova3 <- anova(rats_lrm2)
rats_anova3
str(bprs_l)
pairs(bprs_l, col = bprs_l$subject)
pairs(bprs_l, col = bprs_l$subject)
x
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = bprs, linetype = subject)) +
geom_line(color = "darkgreen") +
scale_linetype_manual(values = rep(1:6, times = 4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "bottom") +
ggtitle("BPRS: data values overview by treatment") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
str(bprs_l)
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
pairs(bprs_l, col = bprs_l$subject)
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = bprs, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
str(bprs_l)
ggplot(bprs_l, aes(x = week, y = BPRS, shape = subject, group = treatment)) +
geom_point(color = "darkgreen") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = BPRS, linetype = subject)) +
geom_line(color = "darkgreen") +
scale_linetype_manual(values = rep(1:6, times = 4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data by treatment") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = BPRS)) +
geom_line(aes(linetype = treatment), color = "darkgreen") +
scale_linetype_manual(values = rep(1:2, times = 1)) +
facet_grid(.~ subject) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,4)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "right") +
ggtitle("Overview of BPRS data by subject") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = BPRS, shape = subject, group = treatment)) +
geom_point(color = "darkblue") +
scale_shape_manual(values = rep(1:10, times = 2)) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS value") +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = BPRS, linetype = subject)) +
geom_line(color = "darkblue") +
scale_linetype_manual(values = rep(1:6, times = 4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "bottom") +
ggtitle("Overview of BPRS data by treatment") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
ggplot(bprs_l, aes(x = week, y = BPRS)) +
geom_line(aes(linetype = treatment), color = "darkblue") +
scale_linetype_manual(values = rep(1:2, times = 1)) +
facet_grid(.~ subject) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,4)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "right") +
ggtitle("Overview of BPRS data by subject") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
bprs_l_lrm1 <- lm(BPRS ~ week + treatment, data = bprs_l)
summary(bprs_l_lrm1)
bprs_l_rim <- lmer(bprs ~ week + treatment + (1 | subject), data = bprs_l, REML = FALSE)
bprs_l_rim <- lmer(BPRS ~ week + treatment + (1 | subject), data = bprs_l, REML = FALSE)
summary(bprs_l_rim)
bprs_l_rim1 <- lmer(BPRS ~ week + treatment + (week | subject), data = bprs_l, REML = FALSE)
summary(bprs_l_rim1)
anova(bprs_l_rim1, bprs_l_rim)
bprs_l_rim2 <- lmer(BPRS ~ week * treatment + (week | subject), data = bprs_l, REML = FALSE)
summary(bprs_l_rim2)
anova(bprs_l_rim2, bprs_l_rim1)
ggplot(bprs_l, aes(x = week, y = BPRS, linetype = subject)) +
geom_line(color = "darkblue") +
scale_linetype_manual(values = rep(1:6, times = 4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS values observed", breaks = seq(10,100,5)) +
theme(legend.position = "bottom") +
ggtitle("BPRS: original values by treatment") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
bprs_l_fit <- fitted(bprs_l_rim2)
bprs_l$fitted_bprs <- round(bprs_l_fit, digits = 2)
bprs_l %>% knitr::kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center") %>% scroll_box(height = "300px")
ggplot(bprs_l, aes(x = week, y = fitted_bprs, linetype = subject)) +
geom_line(color = "darkblue") +
scale_linetype_manual(values = rep(1:6, times = 4)) +
facet_grid(. ~ treatment, labeller = label_both) +
scale_x_continuous(name = "Weeks", breaks = seq(0,8,1)) +
scale_y_continuous(name = "BPRS values modeled", breaks = seq(10,100,5)) +
theme(legend.position = "bottom") +
ggtitle("BPRS: fitted values by treatment") +
theme(legend.box.background = element_rect(),legend.box.margin = margin(2, 2, 2, 2))
