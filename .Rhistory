kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt")
ov_human <- ggpairs(human_ana, mapping = aes(), title ="Overview of 'human' data", lower = list(combo = wrap("facethist", bins = 20)), upper = list(continuous = wrap("cor", size = 2.8)))
ov_human
knitr::kable(summary(human_ana)) %>%
kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
cor_human <- cor(human_ana) %>% round(digits = 2)
cor_human %>% knitr::kable(caption = "Correlation between variables") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
p.mat <- cor.mtest(cor_human)$p
corrplot(cor_human, method="pie", type="lower",  tl.cex = 0.65, p.mat = p.mat, sig.level = 0.01, tl.srt = 45, title="Correlations of 'human' data", mar=c(0,0,1,0))
corrplot(cor_human, method="pie",  type="upper",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, title="Correlations of 'human' data", mar=c(0,0,1,0))
corrplot(cor_human, method="circle",  type="upper",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, title="Correlations of 'human' data", mar=c(0,0,1,0))
corrplot(cor_human, method="circle",  type="lower",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, title="Correlations of 'human' data", mar=c(0,0,1,0))
corrplot(cor_human, method="circle",  type="lower",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, tl.srt = 45, title="Correlations of 'human' data", mar=c(0,0,1,0))
pca_human <- prcomp(human_ana)
round(pca_human$rotation[,1:2], digits = 4) %>% knitr::kable(caption = "PCA result on all variables") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
s1 <- summary(pca_human)
pca_prc1 <- round(100 * s1$importance[2, ], digits = 3)
round(100 * s1$importance[2, 1:2], digits = 5) %>% knitr::kable(caption = "Principle components") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
pca_label1 <-  paste0("GNI (", pca_prc1[1],"%)" )
pca_label2 <-  paste0("Maternal mortality (", pca_prc1[2],"%)" )
autoplot(pca_human, data = human_ana, label= TRUE, label.size = 3.0, colour = "darkgreen", loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of unstandardized human data 2") + xlab(paste0(pca_label1))  + ylab(paste0(pca_label2)) + theme_bw()
corrplot(cor_human, method="circle",  type="lower",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, tl.srt = 45, title="Correlations of 'human' data", mar=c(0,0,1,0))
stzd_human <- scale(human_ana)
knitr::kable(summary(stzd_human)) %>%
kable_styling(bootstrap_options = "striped", position = "center", font_size = 11)
pca_stzd_human <- prcomp(stzd_human)
round(pca_stzd_human$rotation[, 1:2], digits = 4) %>% knitr::kable(caption = "PC1 & 2 of standardized 'human' data") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
s2 <- summary(pca_stzd_human)
pca_prc2 <- round(100 * s2$importance[2, ], digits = 1)
pca_label2.1 <- paste0("Education and health (",pca_prc2[1],"%) ")
pca_label2.2 <- paste0("Female social participation (",pca_prc2[2],"%) ")
round(100 * s2$importance[2, 1:2], digits = 2) %>% knitr::kable(caption = "Principle components") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
biplot(pca_human_stzd, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized human data set", margin =c(0,0,5,0))
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized human data set", margin =c(0,0,5,0))
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized 'human' data", margin =c(0,0,5,0))
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized 'human' data", margin =c(0,0,5,0))
autoplot(prcomp(stzd_human), data = human, colour = "darkgreen", label= TRUE, label.size = 3.0, loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of standardized 'human' data 2") + xlab(paste0(pca_label2.1))  + ylab(paste0(pca_label2.2)) + theme_bw()
autoplot(prcomp(stzd_human), data = human_ana, colour = "darkgreen", label= TRUE, label.size = 3.0, loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of standardized 'human' data 2") + xlab(paste0(pca_label2.1))  + ylab(paste0(pca_label2.2)) + theme_bw()
autoplot(prcomp(stzd_human), data = human_ana, colour = "darkgreen", label= TRUE, label.size = 3.0, loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of standardized 'human' data 2") + xlab(paste0(pca_label2.1))  + ylab(paste0(pca_label2.2)) + theme_bw()
knitr::kable(summary(human_ana)) %>%
kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
knitr::kable(summary(human_ana)) %>% kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
human <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt")
knitr::kable(summary(human)) %>% kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
biplot(pca_human, choices = 1:2, cex = c(0.55, 0,9), col = c("grey40", "darkgreen"), xlab = pca_label1, ylab = pca_label2, main = "PCA biplot of unstandardized human data")
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
pca_label1 <-  paste0("GNI (", pca_prc1[1],"%)" )
pca_label2 <-  paste0("Maternal mortality (", pca_prc1[2],"%)" )
# Define the columns to keep
human_select <-c("Country", "edu2F_edu2M", "labF_labM", "exp_edu", "exp_life", "GNI", "mat_mor", "ado_birth", "F_parli")
# Define the columns to keep
human_select <-c("Country", "edu2F_edu2M", "labF_labM", "exp_edu", "exp_life", "GNI", "mat_mor", "ado_birth", "F_parli")
# Chapter 5: Dimensionality reduction techniques
# yufanyin
# Note: '[Step N]' is used for reviewers to check my work queicky.
# 5.1 Data wrangling
# Part 1 (for Exercise 4; the work for this week is named Part 2)
# 25.11.2019
# reference to the data source:
# http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv
# http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv
# 5.1.1 Read the data into memory
# [Step 2]
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# 5.1.2 Explore the structure and dimensions of the data
# [Step 3a]
head(hd)
dim(hd)
str(hd)
summary(hd)
head(gii)
dim(gii)
str(gii)
summary(gii)
# 5.1.3 Rename the variables with (shorter) descriptive names
# [Step 4]
# The data 'hd'consists of 195 observations in 8 variables.
# HDI.Rank: rank1
# Country: ctr1
# Human.Development.Index..HDI.: hd
# Life.Expectancy.at.Birth: exp_life
# Expected.Years.of.Education: exp_edu
# Mean.Years.of.Education: year_edu
# Gross.National.Income..GNI..per.Capita: gni1
# GNI.per.Capita.Rank.Minus.HDI.Rank: d
library(dplyr)
head(hd)
hd <- rename(hd,rank1 = HDI.Rank)
hd <- rename(hd,hd = Human.Development.Index..HDI.)
hd <- rename(hd,exp_life = Life.Expectancy.at.Birth)
hd <- rename(hd,exp_edu = Expected.Years.of.Education)
hd <- rename(hd,year_edu = Mean.Years.of.Education)
hd <- rename(hd,gni = Gross.National.Income..GNI..per.Capita)
hd <- rename(hd,gni_hdi = GNI.per.Capita.Rank.Minus.HDI.Rank)
head(hd)
# The data 'gii'consists of 195 observations in 10 variables.
library(dplyr)
head(gii)
gii <- rename(gii, rank2 = GII.Rank)
gii <- rename(gii, gii = Gender.Inequality.Index..GII.)
gii <- rename(gii, mat_mor = Maternal.Mortality.Ratio)
gii <- rename(gii, ado_birth = Adolescent.Birth.Rate)
gii <- rename(gii, F_parli = Percent.Representation.in.Parliament)
gii <- rename(gii, edu2F = Population.with.Secondary.Education..Female.)
gii <- rename(gii, edu2M = Population.with.Secondary.Education..Male.)
gii <- rename(gii, labF = Labour.Force.Participation.Rate..Female.)
gii <- rename(gii, labM = Labour.Force.Participation.Rate..Male.)
head(gii)
# 5.1.4 Mutate the “Gender inequality” data and create two new variables
# [Step 5]
gii <- mutate(gii, edu2F_edu2M = edu2F/edu2M)
gii <- mutate(gii, labF_labM = labF/labM)
head(gii)
# 5.1.5 Join the two datasets together
# [Step 6]
join = c("Country")
human <- inner_join(hd, gii, by = join, suffix = c(".hd", ".gii"))
str(human)
write.table(human, file = "G:/C-Open Data Science/0-191030/IODS-project-master/human.txt")
------------------------------------------------------------------------------
# Part 2 (for Exercise 5
# 2.11.2019
# reference to the data source:
# http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# 5.2.1 Read the data
# [Step 0]
human <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/human.txt")
# check the data frame
dim(human)
head(human)
str(human)
summary(human)
# The data are the conbination of two data sets, Human Development Index (HDI) and Gender Inequality Index.
# The data consist of 195 observations in 19 variables.
# 5.2.2 Mutate the data
# [Step 1]
# Transform the Gross National Income (GNI) variable to numeric
library(stringr)
str(human$gni)
human$gni
human$GNI <- str_replace(human$gni, pattern=",", replace ="") %>% as.numeric()
head(human)
human$GNI
# 5.2.3 Exclude unneeded variables
# [Step 2]
# Keep the following variables
# "Country": country name
# "edu2F_edu2M": ratio of second education of female/male
# "labF_labM": ratio of labour forced female/male
# "exp_edu": expected years of education
# "exp_life": life expectancy at birth
# "GNI": Gross National Income per capita
# "mat_mor": maternal mortality ratio
# "ado_birth": adolescent birth rate
# "F_parli": percetange of female representatives in parliament
# Define the columns to keep
human_select <-c("Country", "edu2F_edu2M", "labF_labM", "exp_edu", "exp_life", "GNI", "mat_mor", "ado_birth", "F_parli")
human_select
# Select the column to keep
human_ana <- select(human, one_of(human_select))
# 5.2.4 Remove all rows with missing values
# [Step 3]
# Check the completeness indicator of the data
complete.cases(human_ana)
# if "NA" was in the data set, the completeness indicator will set to "FALSE"
# Set a data frame with the completeness indicator as the last column
data.frame(human_ana[-1], comp = complete.cases(human_ana))
# Filter out all rows with NA values
human_ana <- filter(human_ana, complete.cases(human_ana))
# Check the data set: no "NA"
human_ana
# 5.2.5 Remove the observations which relate to regions
# [Step 4]
# Check the last 10 observations
tail(human_ana, 10)
# Rows from 156 to 162 were regions
# Keep the rows from 1 to 155
human_ana <- human_ana[1:155, ]
# Check the last 10 rows
tail(human_ana, 10)
# 5.2.6 Define the row names of the data by the country names and remove the country name column
# [Step 5]
# Add countries as row names
rownames(human_ana) <- human_ana$country
head(human_ana)
# Remove the country column
human_ana <- human_ana[-1]
head(human_ana)
str(human_ana)
# Save the new data frame
write.table(human_ana,
file = "G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt",
col.names = TRUE, row.names = TRUE)
read.table(file =
"G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt") %>% str()
# The data consist of 155 observations in 8 variables.
# Check the last 10 observations
tail(human_ana, 10)
# Add countries as row names
rownames(human_ana) <- human_ana$Country
head(human_ana)
# Add countries as row names
rownames(human_ana) <- human_ana$Country
head(human_ana)
# Add countries as row names
rownames(human_ana) <- human_ana$country
head(human_ana)
str(human$gni)
human$gni
head(human)
# Add countries as row names
rownames(human_ana) <- human_ana$Country
head(human_ana)
# Add countries as row names
rownames(human_ana) <- human_ana$Country
human_ana <- human_ana[ ,2:ncol(human_)]
human_ana <- human_ana[ ,2:ncol(human_ana)]
head(human_ana)
head(human_ana)
human <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/human.txt")
# check the data frame
dim(human)
head(human)
str(human)
summary(human)
# The data are the conbination of two data sets, Human Development Index (HDI) and Gender Inequality Index.
# The data consist of 195 observations in 19 variables.
# 5.2.2 Mutate the data
# [Step 1]
# Transform the Gross National Income (GNI) variable to numeric
library(stringr)
str(human$gni)
human$gni
human$GNI <- str_replace(human$gni, pattern=",", replace ="") %>% as.numeric()
head(human)
human$GNI
# 5.2.3 Exclude unneeded variables
# [Step 2]
# Keep the following variables
# "Country": country name
# "edu2F_edu2M": ratio of second education of female/male
# "labF_labM": ratio of labour forced female/male
# "exp_edu": expected years of education
# "exp_life": life expectancy at birth
# "GNI": Gross National Income per capita
# "mat_mor": maternal mortality ratio
# "ado_birth": adolescent birth rate
# "F_parli": percetange of female representatives in parliament
# Define the columns to keep
human_select <-c("Country", "edu2F_edu2M", "labF_labM", "exp_edu", "exp_life", "GNI", "mat_mor", "ado_birth", "F_parli")
human_select
# Select the column to keep
human_ana <- select(human, one_of(human_select))
head(human_ana)
# Check the completeness indicator of the data
complete.cases(human_ana)
# Set a data frame with the completeness indicator as the last column
data.frame(human_ana[-1], comp = complete.cases(human_ana))
head(human_ana)
# Filter out all rows with NA values
human_ana <- filter(human_ana, complete.cases(human_ana))
head(human_ana)
# Check the data set: no "NA"
human_ana
# Keep the rows from 1 to 155
human_ana <- human_ana[1:155, ]
head(human_ana)
# 5.2.6 Define the row names of the data by the country names and remove the country name column
# [Step 5]
head(human_ana)
# Add countries as row names
rownames(human_ana) <- human_ana$Country
head(human_ana)
# Remove the country column
human_ana <- human_ana[-1]
head(human_ana)
str(human_ana)
# Save the new data frame
write.table(human_ana,
file = "G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt",
col.names = TRUE, row.names = TRUE)
read.table(file =
"G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt") %>% str()
# The data consist of 155 observations in 8 variables.
head(human_ana)
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized 'human' data", margin =c(0,0,5,0))
# Chapter 5: Dimensionality reduction techniques
(25.11.-2.12.2019)
- **Data wrangling**
R script of data Wrangling exercise is available here.
https://github.com/yufanyin/IODS-project/blob/master/create_human.R
## 5.1 Exploring the data numerically and graphically
Load necessary packages
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
library(tidyr)
library(dplyr)
library(corrplot)
library(ggplot2)
library(GGally)
library(knitr)
library(kableExtra)
library(stringr)
library(ggfortify)
library(factoextra)
```
### 5.1.1 Reading the data
```{r}
human <- read.table(file = "G:/C-Open Data Science/0-191030/IODS-project-master/human_ana.txt")
```
### 5.1.2 Summaries of the variables
**(Step 1a)**
The data are the conbination of two data sets, Human Development Index (HDI) and Gender Inequality Index.
The data consist of 155 observations in 8 variables.
"Country": country name
"edu2F_edu2M": ratio of second education of female/male
"labF_labM": ratio of labour forced female/male
"exp_edu": expected years of education
"exp_life": life expectancy at birth
"GNI": Gross National Income per capita
"mat_mor": maternal mortality ratio
"ado_birth": adolescent birth rate
"F_parli": percetange of female representatives in parliament
```{r}
knitr::kable(summary(human)) %>% kable_styling(bootstrap_options = "striped", position = "center", font_size = 12)
```
### 5.1.3 Graphical overview of the data
**(Step 1b)**
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
ov_human <- ggpairs(human, mapping = aes(), title ="Overview of 'human' data", lower = list(combo = wrap("facethist", bins = 20)), upper = list(continuous = wrap("cor", size = 2.8)))
ov_human
```
The overview plot showed the data distributions of all variables and their correlations. GNI, maternal mortality rate and adolescence birth rate showed left skewed distribution representing a increased cound on low rates. On the upper part showed correlations of the variables.
### 5.1.4 Relationships between the variables
**(Step 1c)**
```{r}
cor_human <- cor(human) %>% round(digits = 2)
cor_human %>% knitr::kable(caption = "Correlation between variables") %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
```
```{r}
p.mat <- cor.mtest(cor_human)$p
corrplot(cor_human, method="circle",  type="lower",  tl.cex = 0.6, p.mat = p.mat, sig.level = 0.01, tl.srt = 45, title="Correlations of 'human' data", mar=c(0,0,1,0))
```
Expected years of education strongly positively correlated with Live expectation and strongly negatively correlated with maternal mortality ratio. It indicated that a better education leads to a higher life expectation and contributes to a lower maternal mortality.
Another strong positive correlation was seen between adolescent birth rate and maternal mortality ratio. This may be due to high quality of medical care.
## 5.2 Principal component analysis (PCA) on unstandardized data
In PCA, the data are first transformed to a new space with equal or less number of dimensions which called the principal components. The 1st principal component captures the maximum amount of variance from the features in the original data. The 2nd principal component is orthogonal to the first and it captures the maximum amount of variability left.
### 5.2.1 Variability captured by the principal components
**(Step 2a)**
```{r}
pca_human <- prcomp(human)
round(pca_human$rotation[,1:2], digits = 4) %>% knitr::kable(caption = "PCA result on all variables") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
```
```{r}
s1 <- summary(pca_human)
pca_prc1 <- round(100 * s1$importance[2, ], digits = 3)
round(100 * s1$importance[2, 1:2], digits = 5) %>% knitr::kable(caption = "Principle components") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
```
### 5.2.2 PCA Biplot displaying the observations by the first two principal components
**(Step 2b)**
The biplot displayed the observations by the first two principal components (PC1 coordinate in x-axis, PC2 coordinate in y-axis), along with arrows representing the original variables.
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
pca_label1 <-  paste0("GNI (", pca_prc1[1],"%)" )
pca_label2 <-  paste0("Maternal mortality (", pca_prc1[2],"%)" )
biplot(pca_human, choices = 1:2, cex = c(0.55, 0,9), col = c("grey40", "darkgreen"), xlab = pca_label1, ylab = pca_label2, main = "PCA biplot of unstandardized human data", margin =c(0,0,5,0))
```
```{r}
autoplot(pca_human, data = human, label= TRUE, label.size = 3.0, colour = "darkgreen", loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of unstandardized human data 2") + xlab(paste0(pca_label1))  + ylab(paste0(pca_label2)) + theme_bw()
```
Principal component 1 (GNI) represents 99.99% of the variance of the unstandardized data. PC2 (maternal mortalility ratio) captures 0.01% of the variance. The Gross National Income per capita explains 99.99% of the principal component 1 of the data.
## 5.3 Principal component analysis (PCA) on standardized data
### 5.3.1 Scaling the data
**(Step 3a)**
The summary of the standardized data is as follows (The mean of all values is 0 and the standard diviation reaches 1).
```{r}
stzd_human <- scale(human)
knitr::kable(summary(stzd_human)) %>%
kable_styling(bootstrap_options = "striped", position = "center", font_size = 11)
```
### 5.3.2 Variability captured by the principal components
**(Step 3b)**
```{r}
pca_stzd_human <- prcomp(stzd_human)
round(pca_stzd_human$rotation[, 1:2], digits = 4) %>% knitr::kable(caption = "PC1 & 2 of standardized 'human' data") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
```
```{r}
s2 <- summary(pca_stzd_human)
pca_prc2 <- round(100 * s2$importance[2, ], digits = 1)
pca_label2.1 <- paste0("Education and health (",pca_prc2[1],"%) ")
pca_label2.2 <- paste0("Female social participation (",pca_prc2[2],"%) ")
round(100 * s2$importance[2, 1:2], digits = 2) %>% knitr::kable(caption = "Principle components") %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "center")
```
### 5.3.3 PCA Biplot
**(Step 3c)**
```{r, echo=TRUE, results='markdown', message=FALSE, warning=FALSE}
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized 'human' data", margin =c(0,0,5,0))
```
```{r}
autoplot(prcomp(stzd_human), data = human, colour = "darkgreen", label= TRUE, label.size = 3.0, loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of standardized 'human' data 2") + xlab(paste0(pca_label2.1))  + ylab(paste0(pca_label2.2)) + theme_bw()
```
### 5.3.4 Interpretations of the first two principal component dimensions
**(Step 4)**
The principal component representing 16.2% of the data variation is strongly associated with parliament representatives and the labour force ratio (female / male). So the occurance of of woman in the labour market and in the political representation is mostly associated with principal component 2. The variables which show the strongest association with principal component 1 (representing 53.6% of the data variation) are life expectation, the school period, the ratio of female/male of second education, adolenscence birthrate and maternal mortality. So overall principal component 1 represents the health and education situation of the countries.
The PCA results differ a lot! To perform the PCA we need to make sure that the obsvervations are standardized, which means that the values are transformed in compareable values.
We can see that in the PCA of the non-standardized human data set the principal component 1 represents almost all varation of the data set - so the Gross National Income per capita is the value representing principle component 1.
The PCA of standardized values looks quite different. You can see that the PC1 & PC2 values spread all over the biplot and more variables are associated to the two principal components.
The angle between the arrows represents the original features of the data set and we can interpret it as the correlation between these features. Is the angle between the arrows small, then there is a positive correlation.
Also the angle between the feature and the principal component can be interpreted as the correlation between these two components. Again, if the angle is small there is a positive correlation. The length of the arrows is proportional to the standard deviation of the features.
biplot(pca_stzd_human, choices = 1:2, cex = c(0.5, 0,9), col = c("grey40", "deeppink2"), xlab = pca_label2.1, ylab = pca_label2.2, main = "PCA biplot of standardized 'human' data", margin =c(0,0,5,0))
autoplot(prcomp(stzd_human), data = human, colour = "darkgreen", label= TRUE, label.size = 3.0, loadings = TRUE, loadings.label = TRUE, loadings.colour = "red",) + ggtitle("PCA biplot of standardized 'human' data 2") + xlab(paste0(pca_label2.1))  + ylab(paste0(pca_label2.2)) + theme_bw()
library(FactoMineR)
data(tea)
str(tea)
# column names to keep in the dataset
keep_tea <- c("Tea", "How", "how", "sugar", "where", "lunch") # from DataCamp
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_tea))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkred") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# column names to keep in the dataset
keep_tea <- c("Tea", "How", "how", "sugar", "where", "lunch") # from DataCamp
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_tea))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkred") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "blue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkred") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkgreen") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkgrey") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkyellow") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkred") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "azure) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "azure") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca_tea_time <- MCA(tea_time, graph = FALSE)
summary(mca_tea_time)
plot(mca_tea_time, invisible=c("ind"), habillage = "quali")
fviz_mca_biplot(mca_tea_time, col.ind = "cos2", col.var = "red", label = "var", geom =  c("point","text"), labelsize = 4, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption behaviour") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
fviz_mca_biplot(mca_tea_time, col.ind = "cos2", col.var = "blue", label = "var", geom =  c("point","text"), labelsize = 4, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption behaviour") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
fviz_mca_biplot(mca_tea_time, col.ind = "cos2", col.var = "yellow", label = "var", geom =  c("point","text"), labelsize = 4, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption behaviour") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
fviz_mca_biplot(mca_tea_time, col.ind = "cos2", col.var = "darkred", label = "var", geom =  c("point","text"), labelsize = 4, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption behaviour") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
# column names to keep
reason_select <- c("sex", "age_Q", "spirituality", "healthy", "slimming", "relaxing")
# create a new dataset
tea_reason <- select(tea, one_of(reason_select))
gather(tea_reason) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkviolet", alpha = 0.6) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# create a new dataset
tea_reason <- select(tea, one_of(reason_select))
gather(tea_reason) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkviolet", alpha = 0.6) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_reason) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue", alpha = 0.6) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea_reason) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue", alpha = 0.6) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca_tea_reason <- MCA(tea_reason, graph = FALSE)
summary(mca_tea_reason)
fviz_mca_biplot(mca_tea_reason, col.ind = "cos2", col.var = "red", alpha.var = "contrib", label = "var", geom =  c("point","text"), labelsize = 3.5, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption reasons") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
fviz_mca_biplot(mca_tea_reason, col.ind = "cos2", col.var = "darkred", alpha.var = "contrib", label = "var", geom =  c("point","text"), labelsize = 3.5, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption reasons") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
# column names to keep in the dataset
tea_select <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select and create a new dataset
tea_time <- select(tea, one_of(tea_select))
str(tea)
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
data(tea)
data(tea)
str(tea)
head(tea)
dim(tea)
# column names to keep in the dataset
tea_select <- c("Tea", "How", "how", "price", "where", "lunch")
# select and create a new dataset
tea_time <- select(tea, one_of(tea_select))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
tea_select
# column names to keep in the dataset
tea_select <- c("Tea", "How", "how", "price", "where", "lunch")
tea_select
str(tea)
# column names to keep in the dataset
tea_select <- c("Tea", "How", "how", "price", "where", "lunch")
tea_select
# select and create a new dataset
tea_time <- select(tea, one_of(tea_select))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar(fill = "darkblue") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# column names to keep in the dataset
keep_tea <- c("Tea", "How", "how", "price", "where", "lunch")
keep_tea
# column names to keep
keep_reason <- c("sex", "age_Q", "spirituality", "healthy", "slimming", "relaxing")
# create a new dataset
tea_reason <- select(tea, one_of(keep_reason))
tea_reason
warning()
str(tea)
tea_time
human_select
tea_time
keep_columns<- c("Tea", "evening", "dinner", "friends", "where")
tea_time<- select(tea, one_of(keep_columns))
tea_time
par(mfrow=c(2,3))
for (i in 1:ncol(tea_time)) {
plot(tea_time[,i], main=colnames(tea_time)[i],
ylab = "Count", col="darkblue", las = 2)
}
mca_tea_time <- MCA(tea_time, graph = FALSE)
summary(mca_tea_time)
plot(mca_tea_time, invisible=c("ind"), habillage = "quali")
fviz_mca_biplot(mca_tea_time, col.ind = "cos2", col.var = "darkred", label = "var", geom =  c("point","text"), labelsize = 4, arrows = c(FALSE,TRUE)) + labs(title = "MCA of tea consumption behaviour") + theme_grey() + theme(axis.line = element_line(size = 0.5), panel.background = element_rect(fill = "gray93"))
#### mca_tea_reason <- MCA(tea_reason, graph = FALSE)
summary(mca_tea_reason)
